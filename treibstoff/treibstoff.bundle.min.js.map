{"version":3,"file":"treibstoff.bundle.min.js","sources":["../src/utils.js","../src/properties.js","../src/parser.js","../src/ajax.js","../src/events.js"],"sourcesContent":["import $ from 'jquery';\n\n\nexport function uuid4() {\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\nexport function json_merge(base, other) {\n    let ret = {};\n    for (let ob of [base, other]) {\n        for (let name in ob) {\n            ret[name] = ob[name];\n        }\n    }\n    return ret;\n}\n\nexport const svg_ns = 'http://www.w3.org/2000/svg';\n\nexport function set_svg_attrs(el, opts) {\n    for (let n in opts) {\n        el.setAttributeNS(null, n, opts[n]);\n    }\n}\n\nexport function create_svg_elem(name, opts, container) {\n    let el = document.createElementNS(svg_ns, name);\n    set_svg_attrs(el, opts);\n    if (container !== undefined) {\n        container.appendChild(el);\n    }\n    return el;\n}\n\nexport function parse_svg(tmpl, container) {\n    var wrapper = create_svg_elem('svg', {});\n    wrapper.innerHTML = tmpl.trim();\n    let elems = [];\n    let children = wrapper.childNodes;\n    for (let i = 0; i < children.length; i++) {\n        let elem = children[i];\n        elems.push(elem);\n        wrapper.removeChild(elem);\n        if (container !== undefined) {\n            container.appendChild(elem);\n        }\n    }\n    return elems;\n}\n\nexport function load_svg(url, callback) {\n    $.get(url, function(data) {\n        let svg = $(data).find('svg');\n        svg.removeAttr('xmlns:a');\n        callback(svg);\n    }.bind(this), 'xml');\n}\n","import $ from 'jquery';\nimport {set_svg_attrs} from './utils.js';\n\n\nexport class Property {\n\n    constructor(inst, name, val) {\n        this._inst = inst;\n        this._name = name;\n        this._val = null;\n        Object.defineProperty(inst, name, {\n            get: this.get.bind(this),\n            set: this.set.bind(this),\n            enumerable: true\n        });\n        if (val !== undefined) {\n            inst[name] = val;\n        }\n    }\n\n    get() {\n        return this._val;\n    }\n\n    set(val) {\n        let changed = val !== this._val;\n        this._val = val;\n        if (changed) {\n            this.trigger(`on_${this._name}`, val);\n        }\n    }\n\n    trigger(evt, opts) {\n        let inst = this._inst;\n        if (inst.trigger) {\n            inst.trigger(evt, opts);\n        }\n    }\n}\n\nexport class BoundProperty extends Property {\n\n    constructor(inst, name, opts) {\n        super(inst, name);\n        this._ctxa = 'elem';\n        if (!opts) {\n            this._ctx = inst[this._ctxa];\n            this._tgt = name;\n        } else {\n            this._ctxa = opts.ctxa !== undefined ? opts.ctxa : this._ctxa;\n            this._ctx = opts.ctx !== undefined ? opts.ctx : inst[this._ctxa];\n            this._tgt = opts.tgt !== undefined ? opts.tgt : name;\n        }\n        let val = opts ? opts.val : undefined;\n        if (val !== undefined) {\n            inst[name] = val;\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get val() {\n        return this._val;\n    }\n\n    get ctx() {\n        if (!this._ctx) {\n            this._ctx = this._inst[this._ctxa];\n        }\n        return this._ctx;\n    }\n\n    get tgt() {\n        return this._tgt;\n    }\n}\n\nexport class DataProperty extends BoundProperty {\n\n    constructor(inst, name, opts) {\n        if (!opts) {\n            opts = {ctx: inst.data};\n        } else {\n            opts.ctx = opts.ctx !== undefined ? opts.ctx : inst.data;\n        }\n        opts.ctxa = 'data';\n        super(inst, name, opts);\n    }\n\n    set(val) {\n        this.ctx[this.tgt] = val;\n        super.set(val);\n    }\n}\n\nexport class AttrProperty extends BoundProperty {\n\n    set(val) {\n        this.ctx.attr(this.tgt, val);\n        super.set(val);\n    }\n}\n\nexport class TextProperty extends BoundProperty {\n\n    set(val) {\n        this.ctx.text(val);\n        super.set(val);\n    }\n}\n\nexport class CSSProperty extends BoundProperty {\n\n    set(val) {\n        $(this.ctx).css(this.tgt, val);\n        super.set(val);\n    }\n}\n\nexport class InputProperty extends BoundProperty {\n\n    constructor(inst, name, opts) {\n        super(inst, name, opts);\n        this.extract = opts ? opts.extract : null;\n        this.state_evt = opts\n            ? (opts.state_evt ? opts.state_evt : 'on_prop_state')\n            : 'on_prop_state';\n        this.error = false;\n        this.msg = '';\n        this._err_marker = {};\n        this.ctx.on('change', this._change.bind(this));\n    }\n\n    set(val) {\n        $(this.ctx).val(val);\n        this._set(val);\n    }\n\n    _change(evt) {\n        let val = $(evt.currentTarget).val();\n        this._set(val);\n    }\n\n    _set(val) {\n        val = this._extract(val);\n        if (val !== this._err_marker) {\n            super.set(val);\n        }\n        if (this.extract) {\n            this.trigger(this.state_evt, this);\n        }\n    }\n\n    _extract(val) {\n        if (this.extract) {\n            try {\n                val = this.extract(val);\n                this.error = false;\n                this.msg = '';\n            } catch (err) {\n                val = this._err_marker;\n                this.error = true;\n                this.msg = err;\n            }\n        }\n        return val;\n    }\n}\n\nexport class ButtonProperty extends BoundProperty {\n\n    constructor(inst, name, opts) {\n        super(inst, name, opts);\n        this.ctx.on('mousedown', this._down.bind(this));\n        this.ctx.on('mouseup', this._up.bind(this));\n    }\n\n    set(val) {\n        this.ctx.text(val);\n        super.set(val);\n    }\n\n    _down(evt) {\n        this.trigger(`on_${this.name}_down`, this);\n    }\n\n    _up(evt) {\n        this.trigger(`on_${this.name}_up`, this);\n    }\n}\n\nexport class SVGProperty extends BoundProperty {\n\n    set(val) {\n        let attrs = {};\n        attrs[this._name] = val;\n        set_svg_attrs(this.ctx, attrs);\n        super.set(val);\n    }\n}\n","import $ from 'jquery';\nimport {\n    ButtonProperty,\n    InputProperty\n} from './properties.js';\nimport {parse_svg} from './utils.js';\n\n\nexport class Parser {\n\n    constructor(widget) {\n        this.widget = widget;\n        this.handlers = {};\n    }\n\n    walk(node) {\n       let children = node.childNodes;\n       for (let i = 0; i < children.length; i++) {\n           this.walk(children[i]);\n       }\n       if (node.nodeType === Node.ELEMENT_NODE) {\n           this.parse(node);\n       }\n    }\n\n    parse(node) {\n        let attrs = this.node_attrs(node),\n            wrapped = this.wrap_node(node);\n        this.handle_elem_attr(wrapped, attrs);\n        let tag = node.tagName.toLowerCase(),\n            handler = this.handlers[tag];\n        if (handler) {\n            handler(wrapped, attrs);\n        }\n    }\n\n    node_attrs(node) {\n        let attrs = {};\n        for (let i in node.attributes) {\n            let attr = node.attributes[i];\n            if (attr && attr.nodeName) {\n                attrs[attr.nodeName] = attr.nodeValue;\n            }\n        }\n        return attrs;\n    }\n\n    wrap_node(node) {\n        return node;\n    }\n\n    handle_elem_attr(node, attrs) {\n        let elem_attr = attrs['t-elem'];\n        if (elem_attr) {\n            this.widget[elem_attr] = node;\n        }\n    }\n}\n\n// ************************************************************************\n// HTML parser\n// ************************************************************************\n\nexport function extract_number(val) {\n    if (isNaN(val)) {\n        throw 'Input is not a number';\n    }\n    return Number(val);\n}\n\nexport function compile_template(inst, tmpl, container) {\n    let elem = $(tmpl.trim());\n    if (container) {\n        container.append(elem);\n    }\n    let parser = new HTMLParser(inst);\n    elem.each(function() {\n        parser.walk(this);\n    });\n    return elem;\n}\n\nexport class HTMLParser extends Parser {\n\n    constructor(widget) {\n        super(widget);\n        this.handlers = {\n            input: this.handle_input.bind(this),\n            select: this.handle_select.bind(this),\n            button: this.handle_button.bind(this)\n        }\n        this.extractors = {\n            number: extract_number\n        }\n    }\n\n    wrap_node(node) {\n        return $(node);\n    }\n\n    handle_input(node, attrs) {\n        let prop = attrs['t-prop'];\n        if (!prop) {\n            return;\n        }\n        let widget = this.widget,\n            extract = this.extractors[attrs['t-type']];\n        if (attrs['t-extract']) {\n            extract = widget[attrs['t-extract']];\n        }\n        let val = attrs['t-val'];\n        if (extract) {\n            val = extract(val);\n        }\n        new InputProperty(widget, prop, {\n            ctx: node,\n            ctxa: attrs['t-elem'],\n            val: val,\n            extract: extract,\n            state_evt: attrs['t-state-evt']\n        });\n    }\n\n    handle_select(node, attrs) {\n        let opts = attrs['t-options'];\n        if (opts) {\n            for (let opt of JSON.parse(opts)) {\n                node.append(`<option value=\"${opt[0]}\">${opt[1]}</option>`);\n            }\n        }\n        this.handle_input(node, attrs);\n    }\n\n    handle_button(node, attrs) {\n        let prop = attrs['t-prop'];\n        if (!prop) {\n            return;\n        }\n        new ButtonProperty(this.widget, prop, {\n            ctx: node,\n            ctxa: attrs['t-elem'],\n            val: attrs['t-val']\n        });\n    }\n}\n\n// ************************************************************************\n// SVG parser\n// ************************************************************************\n\nexport function compile_svg(inst, tmpl, container) {\n    let elems = parse_svg(tmpl, container),\n        parser = new SVGParser(inst);\n    elems.forEach(function (elem, index) {\n        parser.walk(elem);\n    });\n    return elems;\n}\n\nexport class SVGParser extends Parser {\n}\n","import $ from 'jquery';\n\n\nexport class Ajax {\n\n    constructor() {\n        console.log('Hello Ajax');\n        console.log($);\n    }\n}\n","export class Events {\n\n    constructor() {\n        this._subscribers = {};\n        this._suppress_events = false;\n    }\n\n    on(event, subscriber) {\n        let subscribers = this._subscribers[event];\n        if (subscribers === undefined) {\n            this._subscribers[event] = subscribers = new Array();\n        }\n        if (this._contains_subscriber(event, subscriber)) {\n            return this;\n        }\n        subscribers.push(subscriber);\n        return this;\n    }\n\n    off(event, subscriber) {\n        let subscribers = this._subscribers[event];\n        if (subscribers === undefined) {\n            return this;\n        }\n        if (!subscriber) {\n            delete this._subscribers[event];\n            return this;\n        }\n        let idx = subscribers.indexOf(subscriber);\n        if (idx > -1) {\n            subscribers = subscribers.splice(idx, 1);\n        }\n        this._subscribers[event] = subscribers;\n        return this;\n    }\n\n    trigger(event, options) {\n        if (this._suppress_events) {\n            return;\n        }\n        if (this[event]) {\n            this[event](options);\n        }\n        let subscribers = this._subscribers[event];\n        if (!subscribers) {\n            return this;\n        }\n        for (let i = 0; i < subscribers.length; i++) {\n            subscribers[i](this, options);\n        }\n        return this;\n    }\n\n    suppress_events(fn) {\n        this._suppress_events = true;\n        fn();\n        this._suppress_events = false;\n    }\n\n    _contains_subscriber(event, subscriber) {\n        let subscribers = this._subscribers[event];\n        if (!subscribers) {\n            return false;\n        }\n        for (let i = 0; i < subscribers.length; i++) {\n            if (subscribers[i] === subscriber) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"],"names":["svg_ns","set_svg_attrs","el","opts","n","setAttributeNS","create_svg_elem","name","container","document","createElementNS","undefined","appendChild","parse_svg","tmpl","wrapper","innerHTML","trim","elems","children","childNodes","i","length","elem","push","removeChild","Property","constructor","inst","val","this","_inst","_name","_val","Object","defineProperty","get","bind","set","enumerable","changed","trigger","evt","BoundProperty","super","_ctxa","ctxa","_ctx","ctx","_tgt","tgt","InputProperty","extract","state_evt","error","msg","_err_marker","on","_change","$","_set","currentTarget","_extract","err","ButtonProperty","_down","_up","text","Parser","widget","handlers","walk","node","nodeType","Node","ELEMENT_NODE","parse","attrs","node_attrs","wrapped","wrap_node","handle_elem_attr","tag","tagName","toLowerCase","handler","attributes","attr","nodeName","nodeValue","elem_attr","extract_number","isNaN","Number","HTMLParser","input","handle_input","select","handle_select","button","handle_button","extractors","number","prop","opt","JSON","append","SVGParser","console","log","css","data","_subscribers","_suppress_events","event","subscriber","subscribers","Array","_contains_subscriber","off","idx","indexOf","splice","options","suppress_events","fn","parser","forEach","index","each","base","other","ret","ob","url","callback","svg","find","removeAttr","replace","c","crypto","getRandomValues","Uint8Array","toString"],"mappings":"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"}